{"version":3,"sources":["images/avatars/avatars.png","images/avatars/Maria.png","images/avatars/Daniel.png","images/avatars/Jack.png","images/avatars/Ashley.png","images/avatars/Mariam.png","images/avatars/Arden.png","images/avatars/Martha.png","images/avatars/Mohamed.png","utils/_DATA.js","utils/api.js","actions/users.js","actions/questions.js","actions/shared.js","actions/authUser.js","components/Login.js","components/Nav.js","components/PollQuestion.js","utils/helpers.js","components/PollResult.js","components/PollTeaser.js","components/UserCard.js","components/Home.js","components/NewPoll.js","components/Leaderboard.js","components/NoMatch.js","App.js","reducers/index.js","reducers/authUser.js","reducers/questions.js","reducers/users.js","middleware/logger.js","middleware/index.js","index.js"],"names":["module","exports","users","maria","id","name","avatarURL","require","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","daniel","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","jack","ashley","mariam","arden","martha","mohamed","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveQuestionAnswer","qid","answer","_saveQuestionAnswer","RECEIVE_USERS","ADD_ANSWER_TO_USER","ADD_QUESTION_TO_USER","handleSaveQuestionAnswer","dispatch","type","addAnswerToUser","ADD_ANSWER_TO_QUESTION","addAnswerToQuestion","catch","e","console","warn","RECEIVE_QUESTIONS","ADD_QUESTION","handleSaveQuestion","then","addQuestion","addQuestionToUser","handleInitialData","all","receiveQuestions","receiveUsers","SET_AUTH_USER","setAuthUser","Login","useState","loading","setLoading","Segment","Group","image","form","LoginForm","onLoading","className","href","role","aria-label","LoginHeader","Header","as","block","attached","textAlign","Content","Subheader","LoginGridLayout","Grid","padded","Row","Column","width","Dimmer","active","inverted","Loader","content","BrandImage","Image","src","img","size","centered","props","value","setValue","useDispatch","allUsers","useSelector","state","disabled","Form","onSubmit","preventDefault","color","Dropdown","placeholder","fluid","selection","scrolling","options","Object","values","map","user","key","avatar","onChange","required","Button","positive","Nav","handleLogout","Container","Responsive","Menu","minWidth","pointing","secondary","Item","NavLink","to","exact","position","spaced","verticalAlign","labelPosition","basic","compact","icon","onClick","Fragment","maxWidth","columns","widths","floated","PollQuestion","handleChange","Field","Radio","label","checked","colors","green","hex","blue","grey","styles","primary","bgColor","YourVoteLabel","Label","ribbon","Icon","style","float","withRouter","optionOneVotes","length","optionTwoVotes","votesTotal","userVote","option1","option2","fontWeight","backgroundColor","Progress","percent","toFixed","progress","history","push","PollTeaser","viewPoll","setViewPoll","unanswered","buttonColor","buttonContent","pollTypes","POLL_TEASER","POLL_QUESTION","POLL_RESULT","PollContent","pollType","UserCard","question_id","match","badPath","undefined","params","keys","includes","tabColor","borderTop","divided","Home","answeredIds","userQuestionData","answered","filter","sort","a","b","Tab","panes","menuItem","render","Pane","NewPoll","validSubmit","setValidSubmit","isLoading","setIsLoading","setOption1","setOption2","Input","target","Divider","horizontal","trophyColor","Leaderboard","propType","leaderboardData","PropType","array","isRequired","answerCount","questionCount","total","reverse","slice","idx","corner","circular","NoMatch","ContentGrid","children","combineReducers","action","logger","store","next","group","log","returnValue","getState","groupEnd","applyMiddleware","thunk","createStore","rootReducer","middleware","ReactDOM","useEffect","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.6e8f2ffe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatars.a13885d1.png\";","module.exports = __webpack_public_path__ + \"static/media/Maria.9d90756d.png\";","module.exports = __webpack_public_path__ + \"static/media/Daniel.f397a3c7.png\";","module.exports = __webpack_public_path__ + \"static/media/Jack.375502a4.png\";","module.exports = __webpack_public_path__ + \"static/media/Ashley.fbb25a0b.png\";","module.exports = __webpack_public_path__ + \"static/media/Mariam.a88c6067.png\";","module.exports = __webpack_public_path__ + \"static/media/Arden.b89f841f.png\";","module.exports = __webpack_public_path__ + \"static/media/Martha.dedf2aeb.png\";","module.exports = __webpack_public_path__ + \"static/media/Mohamed.26f4bdec.png\";","let users = {\n  maria: {\n    id: \"maria\",\n    name: \"Maria\",\n    avatarURL: require(\"../images/avatars/Maria.png\"),\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\n      am8ehyc8byjqgar0jgpub9: \"optionTwo\",\n      loxhs1bqm25b708cmbf3g: \"optionTwo\",\n    },\n    questions: [\"8xf0y6ziyjabvozdd253nd\", \"am8ehyc8byjqgar0jgpub9\"],\n  },\n  daniel: {\n    id: \"daniel\",\n    name: \"Daniel\",\n    avatarURL: require(\"../images/avatars/Daniel.png\"),\n    answers: {\n      vthrdm985a262al8qx3do: \"optionOne\",\n      xj352vofupe1dqz9emx13r: \"optionTwo\",\n    },\n    questions: [\"loxhs1bqm25b708cmbf3g\", \"vthrdm985a262al8qx3do\"],\n  },\n  jack: {\n    id: \"jack\",\n    name: \"Jack\",\n    avatarURL: require(\"../images/avatars/Jack.png\"),\n    answers: {\n      xj352vofupe1dqz9emx13r: \"optionOne\",\n      vthrdm985a262al8qx3do: \"optionTwo\",\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\n    },\n    questions: [\"6ni6ok3ym7mf1p33lnez\", \"xj352vofupe1dqz9emx13r\"],\n  },\n  ashley: {\n    id: \"ashley\",\n    name: \"Ashley\",\n    avatarURL: require(\"../images/avatars/Ashley.png\"),\n    answers: {},\n    questions: [],\n  },\n  mariam: {\n    id: \"mariam\",\n    name: \"Mariam\",\n    avatarURL: require(\"../images/avatars/Mariam.png\"),\n    answers: {},\n    questions: [],\n  },\n  arden: {\n    id: \"arden\",\n    name: \"Arden\",\n    avatarURL: require(\"../images/avatars/Arden.png\"),\n    answers: {},\n    questions: [],\n  },\n  martha: {\n    id: \"martha\",\n    name: \"Martha\",\n    avatarURL: require(\"../images/avatars/Martha.png\"),\n    answers: {},\n    questions: [],\n  },\n  mohamed: {\n    id: \"mohamed\",\n    name: \"Mohamed\",\n    avatarURL: require(\"../images/avatars/Mohamed.png\"),\n    answers: {},\n    questions: [],\n  },\n};\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: \"8xf0y6ziyjabvozdd253nd\",\n    author: \"ashley\",\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: [\"ashley\"],\n      text: \"have horrible short term memory\",\n    },\n    optionTwo: {\n      votes: [],\n      text: \"have horrible long term memory\",\n    },\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: \"6ni6ok3ym7mf1p33lnez\",\n    author: \"daniel\",\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: \"become a superhero\",\n    },\n    optionTwo: {\n      votes: [\"daniel\", \"ashley\"],\n      text: \"become a supervillain\",\n    },\n  },\n  am8ehyc8byjqgar0jgpub9: {\n    id: \"am8ehyc8byjqgar0jgpub9\",\n    author: \"ashley\",\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: \"be telekinetic\",\n    },\n    optionTwo: {\n      votes: [\"ashley\"],\n      text: \"be telepathic\",\n    },\n  },\n  loxhs1bqm25b708cmbf3g: {\n    id: \"loxhs1bqm25b708cmbf3g\",\n    author: \"arden\",\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: \"be a front-end developer\",\n    },\n    optionTwo: {\n      votes: [\"ashley\"],\n      text: \"be a back-end developer\",\n    },\n  },\n  vthrdm985a262al8qx3do: {\n    id: \"vthrdm985a262al8qx3do\",\n    author: \"arden\",\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: [\"arden\"],\n      text: \"find $50 yourself\",\n    },\n    optionTwo: {\n      votes: [\"daniel\"],\n      text: \"have your best friend find $500\",\n    },\n  },\n  xj352vofupe1dqz9emx13r: {\n    id: \"xj352vofupe1dqz9emx13r\",\n    author: \"daniel\",\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: [\"daniel\"],\n      text: \"write JavaScript\",\n    },\n    optionTwo: {\n      votes: [\"maria\"],\n      text: \"write Swift\",\n    },\n  },\n};\n\nfunction generateUID() {\n  return (\n    Math.random().toString(36).substring(2, 15) +\n    Math.random().toString(36).substring(2, 15)\n  );\n}\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000);\n  });\n}\n\nexport function _getQuestions() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions }), 1000);\n  });\n}\n\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    },\n  };\n}\n\nexport function _saveQuestion(question) {\n  return new Promise((res, rej) => {\n    const authUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion,\n      };\n\n      users = {\n        ...users,\n        [authUser]: {\n          ...users[authUser],\n          questions: users[authUser].questions.concat([formattedQuestion.id]),\n        },\n      };\n\n      res(formattedQuestion);\n    }, 1000);\n  });\n}\n\nexport function _saveQuestionAnswer({ authUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authUser]: {\n          ...users[authUser],\n          answers: {\n            ...users[authUser].answers,\n            [qid]: answer,\n          },\n        },\n      };\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authUser]),\n          },\n        },\n      };\n\n      res();\n    }, 500);\n  });\n}\n","import {\n  _getUsers,\n  _getQuestions,\n  _saveQuestion,\n  _saveQuestionAnswer\n} from \"./_DATA\";\n\nexport function getInitialData() {\n  return Promise.all([_getUsers(), _getQuestions()]).then(\n    ([users, questions]) => ({\n      users,\n      questions\n    })\n  );\n}\n\nexport function saveQuestion(question) {\n  return _saveQuestion(question);\n}\n\nexport function saveQuestionAnswer(authUser, qid, answer) {\n  return _saveQuestionAnswer({ authUser, qid, answer });\n}\n","import { saveQuestionAnswer } from '../utils/api';\nimport { addAnswerToQuestion } from '../actions/questions';\n\nexport const RECEIVE_USERS = 'RECEIVE_USERS';\nexport const ADD_ANSWER_TO_USER = 'ADD_ANSWER_TO_USER';\nexport const ADD_QUESTION_TO_USER = 'ADD_QUESTION_TO_USER';\n\nexport function receiveUsers(users) {\n  return {\n    type: RECEIVE_USERS,\n    users\n  };\n}\n\nfunction addAnswerToUser(authUser, qid, answer) {\n  return {\n    type: ADD_ANSWER_TO_USER,\n    authUser,\n    qid,\n    answer\n  };\n}\n\nexport function handleSaveQuestionAnswer(authUser, qid, answer) {\n  return dispatch => {\n    dispatch(addAnswerToUser(authUser, qid, answer));\n    dispatch(addAnswerToQuestion(authUser, qid, answer));\n\n    return saveQuestionAnswer(authUser, qid, answer).catch(e => {\n      console.warn('Error in handleSaveQuestionAnswer:', e);\n    });\n  };\n}\n\nexport function addQuestionToUser({ id, author }) {\n  return {\n    type: ADD_QUESTION_TO_USER,\n    id,\n    author\n  };\n}\n","import { saveQuestion } from '../utils/api';\nimport { addQuestionToUser } from '../actions/users';\n\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const ADD_ANSWER_TO_QUESTION = 'ADD_ANSWER_TO_QUESTION';\nexport const ADD_QUESTION = 'ADD_QUESTION';\n\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\n\nexport function addAnswerToQuestion(authUser, qid, answer) {\n  return {\n    type: ADD_ANSWER_TO_QUESTION,\n    authUser,\n    qid,\n    answer\n  };\n}\n\nfunction addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question\n  };\n}\n\nexport function handleSaveQuestion(optionOneText, optionTwoText, author) {\n  return dispatch => {\n    return saveQuestion({ optionOneText, optionTwoText, author }).then(\n      question => {\n        dispatch(addQuestion(question));\n        dispatch(addQuestionToUser(question));\n      }\n    );\n  };\n}\n","import { getInitialData } from '../utils/api';\nimport { receiveQuestions } from '../actions/questions';\nimport { receiveUsers } from '../actions/users';\n\nexport function handleInitialData() {\n  return dispatch => {\n    return getInitialData().then(({ users, questions }) => {\n      dispatch(receiveQuestions(questions));\n      dispatch(receiveUsers(users));\n    });\n  };\n}\n","export const SET_AUTH_USER = 'SET_AUTH_USER';\n\nexport function setAuthUser(id) {\n  return {\n    type: SET_AUTH_USER,\n    id\n  };\n}\n","import React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Segment,\n  Grid,\n  Header,\n  Image,\n  Form,\n  Loader,\n  Dimmer,\n} from \"semantic-ui-react\";\nimport { setAuthUser } from \"../actions/authUser\";\nimport img from \"../images/avatars/avatars.png\";\nexport default function Login() {\n  const [loading, setLoading] = useState(false);\n\n  const handleLoading = () => {\n    setLoading(true);\n  };\n\n  return (\n    <Fragment>\n      <Segment.Group>\n        <LoginHeader />\n        <LoginGridLayout\n          image={<BrandImage />}\n          form={<LoginForm onLoading={handleLoading} />}\n          loading={loading}\n        />\n      </Segment.Group>\n      <footer className=\"footer\">\n        <a href=\"https://www.freepik.com/vectors/business\">\n          Business vector created by freepik - www.freepik.com\n        </a>\n        <br></br>\n        Made with{\" \"}\n        <span role=\"img\" aria-label=\"heart\">\n          ♥️\n        </span>{\" \"}\n        by <a href=\"https://github.com/mohamedsgap\">Mohamed Abdel Nasser</a>\n      </footer>\n    </Fragment>\n  );\n}\n\nconst LoginHeader = () => (\n  <Header as=\"h4\" block attached=\"top\" textAlign=\"center\">\n    <Header.Content>Welcome to the Would You Rather App!</Header.Content>\n    <Header.Subheader>Please sign in to continue</Header.Subheader>\n  </Header>\n);\n\nconst LoginGridLayout = ({ image, form, loading }) => (\n  <div>\n    <Grid padded textAlign=\"center\">\n      <Grid.Row className=\"login\">\n        <Grid.Column width={16}>\n          {loading === true && (\n            <Dimmer active inverted>\n              <Loader inverted content=\"Loading\" />\n            </Dimmer>\n          )}\n          {image}\n          <br />\n          {form}\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </div>\n);\n\nconst BrandImage = () => <Image src={img} size=\"medium\" centered />;\n\nfunction LoginForm(props) {\n  LoginForm.propTypes = {\n    onLoading: PropTypes.func.isRequired,\n  };\n\n  const [value, setValue] = useState(\"\");\n  const onChange = (e, { value }) => {\n    setValue(value);\n  };\n\n  const dispatch = useDispatch();\n  const allUsers = useSelector((state) => state.users);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { onLoading } = props;\n\n    const authUser = value;\n\n    new Promise((res, rej) => {\n      onLoading();\n      setTimeout(() => res(), 500);\n    }).then(() => dispatch(setAuthUser(authUser)));\n  };\n\n  const generateDropdownData = () => {\n    const users = Object.values(allUsers);\n\n    return users.map((user) => ({\n      key: user.id,\n      text: user.name,\n      value: user.id,\n      image: { avatar: true, src: user.avatarURL },\n    }));\n  };\n\n  const disabled = value === \"\" ? true : false;\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Header as=\"h2\" color=\"green\">\n        Sign In\n      </Header>\n      <Form.Dropdown\n        placeholder=\"Select a Friend\"\n        fluid\n        selection\n        scrolling\n        options={generateDropdownData()}\n        value={value}\n        onChange={onChange}\n        required\n      />\n      <Form.Button content=\"Login\" positive disabled={disabled} fluid />\n    </Form>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Menu,\n  Responsive,\n  Image,\n  Grid,\n  Button,\n  Container,\n} from \"semantic-ui-react\";\nimport { setAuthUser } from \"../actions/authUser\";\n\nexport default function Nav() {\n  const dispatch = useDispatch();\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    dispatch(setAuthUser(null));\n  };\n\n  const authUser = useSelector((state) => state.authUser);\n  const users = useSelector((state) => state.users);\n  return (\n    <Container>\n      <Responsive as={Menu} minWidth={651} pointing secondary>\n        <Menu.Item name=\"home\" as={NavLink} to=\"/\" exact />\n        <Menu.Item name=\"new poll\" as={NavLink} to=\"/add\" />\n        <Menu.Item name=\"leader board\" as={NavLink} to=\"/leaderboard\" />\n        <Menu.Menu position=\"right\">\n          <Menu.Item>\n            <span>\n              <Image\n                src={users[authUser].avatarURL}\n                avatar\n                spaced=\"right\"\n                verticalAlign=\"bottom\"\n              />\n              {users[authUser].name}\n            </span>\n          </Menu.Item>\n          <Menu.Item>\n            <Button\n              content=\"Logout\"\n              labelPosition=\"right\"\n              basic\n              compact\n              icon=\"log out\"\n              size=\"mini\"\n              onClick={handleLogout}\n            />\n          </Menu.Item>\n        </Menu.Menu>\n      </Responsive>\n      <Responsive as={Fragment} minWidth={375} maxWidth={650}>\n        <Grid columns={2} padded=\"vertically\">\n          <Grid.Row>\n            <Grid.Column>\n              <Image\n                src={users[authUser].avatarURL}\n                avatar\n                spaced=\"right\"\n                verticalAlign=\"bottom\"\n              />\n              {users[authUser].name}\n            </Grid.Column>\n            <Grid.Column verticalAlign=\"bottom\" textAlign=\"right\">\n              <Button\n                content=\"Logout\"\n                labelPosition=\"right\"\n                basic\n                compact\n                icon=\"log out\"\n                size=\"mini\"\n                onClick={handleLogout}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <Menu pointing secondary widths={3}>\n                <Menu.Item name=\"home\" as={NavLink} to=\"/\" exact />\n                <Menu.Item name=\"new poll\" as={NavLink} to=\"/add\" />\n                <Menu.Item name=\"leader board\" as={NavLink} to=\"/leaderboard\" />\n              </Menu>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Responsive>\n      <Responsive as={Fragment} maxWidth={374}>\n        <Grid padded=\"vertically\" columns={1}>\n          <Grid.Row>\n            <Grid.Column>\n              <Image\n                src={users[authUser].avatarURL}\n                avatar\n                spaced=\"right\"\n                verticalAlign=\"bottom\"\n              />\n              {users[authUser].name}\n              <Button\n                content=\"Logout\"\n                labelPosition=\"right\"\n                basic\n                compact\n                icon=\"log out\"\n                size=\"mini\"\n                floated=\"right\"\n                onClick={handleLogout}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Menu pointing secondary widths={3}>\n                <Menu.Item name=\"home\" as={NavLink} to=\"/\" exact />\n                <Menu.Item name=\"new poll\" as={NavLink} to=\"/add\" />\n                <Menu.Item name=\"leader board\" as={NavLink} to=\"/leaderboard\" />\n              </Menu>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Responsive>\n    </Container>\n  );\n}\n","import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Header, Button, Form, Radio } from \"semantic-ui-react\";\nimport { handleSaveQuestionAnswer } from \"../actions/users\";\n\nexport default function PollQuestion(props) {\n  PollQuestion.propTypes = {\n    authUser: PropTypes.string.isRequired,\n    handleSaveQuestionAnswer: PropTypes.func.isRequired,\n    question: PropTypes.object.isRequired,\n  };\n\n  const [value, setValue] = useState(\"\");\n\n  const handleChange = (e, { value }) => setValue(value);\n  const dispatch = useDispatch();\n  const authUser = useSelector((state) => state.authUser);\n  const { question } = props;\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (value !== \"\") {\n      dispatch(handleSaveQuestionAnswer(authUser, question.id, value));\n    }\n  };\n\n  const disabled = value === \"\" ? true : false;\n\n  return (\n    <Fragment>\n      <Header as=\"h4\">Would you rather</Header>\n      <Form onSubmit={handleSubmit}>\n        <Form.Field>\n          <Radio\n            label={question.optionOne.text}\n            name=\"radioGroup\"\n            value=\"optionOne\"\n            checked={value === \"optionOne\"}\n            onChange={handleChange}\n          />\n          <br />\n          <Radio\n            label={question.optionTwo.text}\n            name=\"radioGroup\"\n            value=\"optionTwo\"\n            checked={value === \"optionTwo\"}\n            onChange={handleChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Button\n            color=\"green\"\n            size=\"tiny\"\n            fluid\n            positive\n            disabled={disabled}\n            content=\"Submit\"\n          />\n        </Form.Field>\n      </Form>\n    </Fragment>\n  );\n}\n","export const colors = {\n  green: {\n    name: \"green\",\n    hex: \"#21ba45\"\n  },\n  blue: {\n    name: \"blue\",\n    hex: \"#2185d0\"\n  },\n  grey: {\n    name: null,\n    hex: \"#d4d4d5\"\n  }\n};\n\nexport const styles = {\n  primary: {\n    color: \"green\",\n    bgColor: \"honeydew\"\n  },\n  secondary: {\n    color: \"grey\",\n    bgColor: \"#f4f4f4\"\n  }\n};\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Header,\n  Segment,\n  Progress,\n  Label,\n  Button,\n  Icon,\n} from \"semantic-ui-react\";\nimport { styles } from \"../utils/helpers\";\n\nconst YourVoteLabel = () => (\n  <Label color=\"orange\" ribbon=\"right\" className=\"vote\">\n    <Icon name=\"check circle outline\" size=\"big\" className=\"compact\" />\n    <div style={{ float: \"right\" }}>\n      Your\n      <br />\n      Vote\n    </div>\n  </Label>\n);\n\nfunction PollResult(props) {\n  PollResult.propTypes = {\n    history: PropTypes.object.isRequired,\n    question: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n  };\n\n  const handleClick = () => {\n    props.history.push(\"/\");\n  };\n\n  const authUser = useSelector((state) => state.authUser);\n  const users = useSelector((state) => state.users);\n  const { question } = props;\n  const user = users[authUser];\n  const optionOneVotes = question.optionOne.votes.length;\n  const optionTwoVotes = question.optionTwo.votes.length;\n  const votesTotal = optionOneVotes + optionTwoVotes;\n  const userVote = user.answers[question.id];\n\n  let option1 = styles.secondary,\n    option2 = styles.secondary;\n  if (optionOneVotes > optionTwoVotes) {\n    option1 = styles.primary;\n  } else if (optionTwoVotes > optionOneVotes) {\n    option2 = styles.primary;\n  }\n\n  return (\n    <Fragment>\n      <Header as=\"h3\">\n        Results:\n        <Header.Subheader style={{ fontWeight: \"bold\" }}>\n          Would you rather\n        </Header.Subheader>\n      </Header>\n      <Segment\n        color={option1.color}\n        style={{ backgroundColor: `${option1.bgColor}` }}\n      >\n        {userVote === \"optionOne\" && <YourVoteLabel />}\n        <p style={{ fontWeight: \"bold\" }}>{question.optionOne.text}</p>\n        <Progress\n          percent={((optionOneVotes / votesTotal) * 100).toFixed(2)}\n          progress\n          color={option1.color}\n        >\n          {optionOneVotes} out of {votesTotal} votes\n        </Progress>\n      </Segment>\n      <Segment\n        color={option2.color}\n        style={{ backgroundColor: `${option2.bgColor}` }}\n      >\n        {userVote === \"optionTwo\" && <YourVoteLabel />}\n\n        <p style={{ fontWeight: \"bold\" }}>{question.optionTwo.text}</p>\n        <Progress\n          percent={((optionTwoVotes / votesTotal) * 100).toFixed(2)}\n          progress\n          color={option2.color}\n        >\n          {optionTwoVotes} out of {votesTotal} votes\n        </Progress>\n      </Segment>\n      {/* <Form.Field> */}\n      <Button size=\"tiny\" floated=\"right\" onClick={handleClick}>\n        Back\n      </Button>\n      {/* </Form.Field> */}\n    </Fragment>\n  );\n}\n\nexport default withRouter(PollResult);\n","import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { Header, Button } from \"semantic-ui-react\";\nimport { colors } from \"../utils/helpers\";\n\nexport default function PollTeaser(props) {\n  PollTeaser.propTypes = {\n    question: PropTypes.object.isRequired,\n    unanswered: PropTypes.bool.isRequired,\n  };\n\n  const [viewPoll, setViewPoll] = useState(false);\n\n  const handleClick = (e) => {\n    setViewPoll((viewPoll) => !viewPoll);\n  };\n\n  const { question, unanswered } = props;\n  const buttonColor = unanswered === true ? colors.green : colors.blue;\n  const buttonContent = unanswered === true ? \"Answer Poll\" : \"Results\";\n\n  if (viewPoll === true) {\n    return <Redirect push to={`/questions/${question.id}`} />;\n  }\n  return (\n    <Fragment>\n      <Header as=\"h5\" textAlign=\"left\">\n        Would you rather\n      </Header>\n      <p style={{ textAlign: \"center\" }}>\n        {question.optionOne.text}\n        <br />\n        or...\n      </p>\n      <Button\n        color={buttonColor.name}\n        size=\"tiny\"\n        fluid\n        onClick={handleClick}\n        content={buttonContent}\n      />\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Segment, Header, Grid, Image } from \"semantic-ui-react\";\nimport PollQuestion from \"./PollQuestion\";\nimport PollResult from \"./PollResult\";\nimport PollTeaser from \"./PollTeaser\";\nimport { colors } from \"../utils/helpers\";\n\nconst pollTypes = {\n  POLL_TEASER: \"POLL_TEASER\",\n  POLL_QUESTION: \"POLL_QUESTION\",\n  POLL_RESULT: \"POLL_RESULT\",\n};\n\nconst PollContent = (props) => {\n  const { pollType, question, unanswered } = props;\n\n  switch (pollType) {\n    case pollTypes.POLL_TEASER:\n      return <PollTeaser question={question} unanswered={unanswered} />;\n    case pollTypes.POLL_QUESTION:\n      return <PollQuestion question={question} />;\n    case pollTypes.POLL_RESULT:\n      return <PollResult question={question} />;\n    default:\n      return;\n  }\n};\n\nexport default function UserCard(props) {\n  UserCard.propTypes = {\n    question: PropTypes.object,\n    author: PropTypes.object,\n    pollType: PropTypes.string,\n    unanswered: PropTypes.bool,\n    question_id: PropTypes.string,\n  };\n\n  const { question_id, match, unanswered = null } = props;\n\n  const users = useSelector((state) => state.users);\n  const questions = useSelector((state) => state.questions);\n  const authUser = useSelector((state) => state.authUser);\n\n  let question,\n    author,\n    pollType,\n    badPath = false;\n  if (question_id !== undefined) {\n    question = questions[question_id];\n    author = users[question.author];\n    pollType = pollTypes.POLL_TEASER;\n  } else {\n    const { question_id } = match.params;\n    question = questions[question_id];\n    const user = users[authUser];\n\n    if (question === undefined) {\n      badPath = true;\n    } else {\n      author = users[question.author];\n      pollType = pollTypes.POLL_QUESTION;\n      if (Object.keys(user.answers).includes(question.id)) {\n        pollType = pollTypes.POLL_RESULT;\n      }\n    }\n  }\n\n  if (badPath === true) {\n    return <Redirect to=\"/questions/bad_id\" />;\n  }\n\n  const tabColor = unanswered === true ? colors.green : colors.blue;\n  const borderTop =\n    unanswered === null\n      ? `1px solid ${colors.grey}`\n      : `2px solid ${tabColor.hex}`;\n\n  return (\n    <Segment.Group>\n      <Header\n        as=\"h5\"\n        textAlign=\"left\"\n        block\n        attached=\"top\"\n        style={{ borderTop: borderTop }}\n      >\n        {author.name} asks:\n      </Header>\n\n      <Grid divided padded>\n        <Grid.Row>\n          <Grid.Column width={5}>\n            <Image src={author.avatarURL} />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <PollContent\n              pollType={pollType}\n              question={question}\n              unanswered={unanswered}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment.Group>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { Tab } from \"semantic-ui-react\";\nimport UserCard from \"./UserCard\";\n\nexport default function Home() {\n  Home.propTypes = {\n    userQuestionData: PropTypes.object.isRequired,\n  };\n\n  const users = useSelector((state) => state.users);\n  const authUser = useSelector((state) => state.authUser);\n  const questions = useSelector((state) => state.questions);\n  const answeredIds = Object.keys(users[authUser].answers);\n  const answered = Object.values(questions)\n    .filter((question) => !answeredIds.includes(question.id))\n    .sort((a, b) => b.timestamp - a.timestamp);\n  const unanswered = Object.values(questions)\n    .filter((question) => answeredIds.includes(question.id))\n    .sort((a, b) => b.timestamp - a.timestamp);\n\n  const userQuestionData = { answered, unanswered };\n\n  return <Tab panes={panes({ userQuestionData })} className=\"tab\" />;\n}\n\nconst panes = (props) => {\n  const { userQuestionData } = props;\n  return [\n    {\n      menuItem: \"Unanswered\",\n      render: () => (\n        <Tab.Pane>\n          {userQuestionData.answered.map((question) => (\n            <UserCard\n              key={question.id}\n              question_id={question.id}\n              unanswered={true}\n            />\n          ))}\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: \"Answered\",\n      render: () => (\n        <Tab.Pane>\n          {userQuestionData.unanswered.map((question) => (\n            <UserCard\n              key={question.id}\n              question_id={question.id}\n              unanswered={false}\n            />\n          ))}\n        </Tab.Pane>\n      ),\n    },\n  ];\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Segment,\n  Header,\n  Grid,\n  Divider,\n  Form,\n  Dimmer,\n  Loader,\n} from \"semantic-ui-react\";\nimport { handleSaveQuestion } from \"../actions/questions\";\n\nexport default function NewPoll() {\n  NewPoll.propTypes = {\n    authUser: PropTypes.string.isRequired,\n    handleSaveQuestion: PropTypes.func.isRequired,\n  };\n\n  const [validSubmit, setValidSubmit] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [option1, setOption1] = useState(\"\");\n  const [option2, setOption2] = useState(\"\");\n\n  const handleChangeOption1 = (e) => {\n    setOption1(e.target.value);\n  };\n  const handleChangeOption2 = (e) => {\n    setOption2(e.target.value);\n  };\n\n  const authUser = useSelector((state) => state.authUser);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    new Promise((res, rej) => {\n      setIsLoading(true);\n      dispatch(handleSaveQuestion(option1, option2, authUser));\n      setTimeout(() => res(\"success\"), 1000);\n    }).then(() => {\n      setOption1(\"\");\n      setOption2(\"\");\n      setValidSubmit(true);\n    });\n  };\n\n  const disabled = option1 === \"\" || option2 === \"\";\n\n  if (validSubmit === true) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Segment.Group>\n      <Header as=\"h3\" textAlign=\"left\" block attached=\"top\">\n        Create a New Poll\n      </Header>\n      <Grid padded>\n        <Grid.Column>\n          {isLoading && (\n            <Dimmer active inverted>\n              <Loader content=\"Updating\" />\n            </Dimmer>\n          )}\n          <p>Complete the question:</p>\n          <p>\n            <strong>Would you rather...</strong>\n          </p>\n          <Form onSubmit={handleSubmit}>\n            <Form.Input\n              id=\"option1\"\n              placeholder=\"Enter option one...\"\n              value={option1}\n              onChange={handleChangeOption1}\n              required\n            />\n            <Divider horizontal>Or</Divider>\n            <Form.Input\n              id=\"option2\"\n              placeholder=\"Enter option two...\"\n              value={option2}\n              onChange={handleChangeOption2}\n              required\n            />\n            <Form.Button positive size=\"tiny\" fluid disabled={disabled}>\n              Submit\n            </Form.Button>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </Segment.Group>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport PropType from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Segment,\n  Grid,\n  Header,\n  Image,\n  Label,\n  Divider,\n} from \"semantic-ui-react\";\n\nconst trophyColor = [\"yellow\", \"grey\", \"orange\"];\n\nexport default function Leaderboard() {\n  Leaderboard.propType = {\n    leaderboardData: PropType.array.isRequired,\n  };\n\n  const users = useSelector((state) => state.users);\n  const leaderboardData = Object.values(users)\n    .map((user) => ({\n      id: user.id,\n      name: user.name,\n      avatarURL: user.avatarURL,\n      answerCount: Object.values(user.answers).length,\n      questionCount: user.questions.length,\n      total: Object.values(user.answers).length + user.questions.length,\n    }))\n    .sort((a, b) => a.total - b.total)\n    .reverse()\n    .slice(0, 3);\n\n  return (\n    <Fragment>\n      {leaderboardData.map((user, idx) => (\n        <Segment.Group key={user.id}>\n          <Label corner=\"left\" icon=\"trophy\" color={trophyColor[idx]} />\n          <Grid divided padded>\n            <Grid.Row>\n              <Grid.Column width={4} verticalAlign=\"middle\">\n                <Image src={user.avatarURL} />\n              </Grid.Column>\n              <Grid.Column width={8}>\n                <Header as=\"h3\" textAlign=\"left\">\n                  {user.name}\n                </Header>\n                <Grid>\n                  <Grid.Column width={12}>Answered questions</Grid.Column>\n                  <Grid.Column width={4}>{user.answerCount}</Grid.Column>\n                </Grid>\n                <Divider />\n                <Grid>\n                  <Grid.Column width={12}>Created questions</Grid.Column>\n                  <Grid.Column width={4}>{user.questionCount}</Grid.Column>\n                </Grid>\n              </Grid.Column>\n              <Grid.Column width={4} textAlign=\"center\">\n                <Segment.Group>\n                  <Header as=\"h5\" block attached=\"top\" content=\"Score\" />\n                  <Segment>\n                    <Label circular color=\"green\" size=\"big\">\n                      {user.questionCount + user.answerCount}\n                    </Label>\n                  </Segment>\n                </Segment.Group>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment.Group>\n      ))}\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport { Container, Header } from \"semantic-ui-react\";\n\nexport default function NoMatch() {\n  return (\n    <Container textAlign=\"center\">\n      <Header as=\"h3\">No Match 404 Error</Header>\n      <p>Nothing to see here. Please use the menu to try again.</p>\n    </Container>\n  );\n}\n","import React, { useEffect, Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport { handleInitialData } from \"./actions/shared\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Login from \"./components/Login\";\nimport Nav from \"./components/Nav\";\nimport Home from \"./components/Home\";\nimport UserCard from \"./components/UserCard\";\nimport NewPoll from \"./components/NewPoll\";\nimport Leaderboard from \"./components/Leaderboard\";\nimport NoMatch from \"./components/NoMatch\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(handleInitialData());\n  }, [dispatch]);\n\n  const authUser = useSelector((state) => state.authUser);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {authUser === null ? (\n          <Route\n            render={() => (\n              <ContentGrid>\n                <Login />\n              </ContentGrid>\n            )}\n          />\n        ) : (\n          <Fragment>\n            <Nav />\n            <ContentGrid>\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/questions/bad_id\" component={NoMatch} />\n                <Route path=\"/questions/:question_id\" component={UserCard} />\n                <Route path=\"/add\" component={NewPoll} />\n                <Route path=\"/leaderboard\" component={Leaderboard} />\n                <Route component={NoMatch} />\n              </Switch>\n            </ContentGrid>\n          </Fragment>\n        )}\n      </div>\n    </Router>\n  );\n}\n\nconst ContentGrid = ({ children }) => (\n  <Grid padded=\"vertically\" columns={1} centered>\n    <Grid.Row>\n      <Grid.Column style={{ maxWidth: 550 }}>{children}</Grid.Column>\n    </Grid.Row>\n  </Grid>\n);\n","import { combineReducers } from 'redux';\nimport authUser from '../reducers/authUser';\nimport questions from '../reducers/questions';\nimport users from '../reducers/users';\n\nexport default combineReducers({\n  authUser,\n  questions,\n  users\n});\n","import { SET_AUTH_USER } from '../actions/authUser';\n\nexport default function authUser(state = null, action) {\n  if (action.type === SET_AUTH_USER) {\n    return action.id;\n  }\n  return state;\n}\n","import {\n    RECEIVE_QUESTIONS,\n    ADD_ANSWER_TO_QUESTION,\n    ADD_QUESTION\n  } from '../actions/questions';\n  \n  export default function questions(state = {}, action) {\n    switch (action.type) {\n      case RECEIVE_QUESTIONS:\n        return {\n          ...state,\n          ...action.questions\n        };\n      case ADD_ANSWER_TO_QUESTION:\n        const { authUser, qid, answer } = action;\n  \n        return {\n          ...state,\n          [qid]: {\n            ...state[qid],\n            [answer]: {\n              ...state[qid][answer],\n              votes: state[qid][answer].votes.concat(authUser)\n            }\n          }\n        };\n      case ADD_QUESTION:\n        const { question } = action;\n  \n        return {\n          ...state,\n          [question.id]: question\n        };\n      default:\n        return state;\n    }\n  }\n  ","import {\n    RECEIVE_USERS,\n    ADD_ANSWER_TO_USER,\n    ADD_QUESTION_TO_USER\n  } from '../actions/users';\n  \n  export default function users(state = {}, action) {\n    switch (action.type) {\n      case RECEIVE_USERS:\n        return {\n          ...state,\n          ...action.users\n        };\n      case ADD_ANSWER_TO_USER:\n        const { authUser, qid, answer } = action;\n  \n        return {\n          ...state,\n          [authUser]: {\n            ...state[authUser],\n            answers: {\n              ...state[authUser].answers,\n              [qid]: answer\n            }\n          }\n        };\n      case ADD_QUESTION_TO_USER:\n        const { id, author } = action;\n  \n        return {\n          ...state,\n          [author]: {\n            ...state[author],\n            questions: state[author].questions.concat(id)\n          }\n        };\n      default:\n        return state;\n    }\n  }\n  ","const logger = store => next => action => {\n    console.group(action.type);\n    console.log('The action:', action);\n    const returnValue = next(action);\n    console.log('The new state: ', store.getState());\n    console.groupEnd();\n    return returnValue;\n  };\n  \n  export default logger;\n  ","import thunk from 'redux-thunk';\nimport logger from './logger';\nimport { applyMiddleware } from 'redux';\n\nexport default applyMiddleware(thunk, logger);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/index\";\nimport middleware from \"./middleware\";\n\nconst store = createStore(rootReducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}